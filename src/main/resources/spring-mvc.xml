<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/websocket  
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	<mvc:annotation-driven />
	
	
	
	<context:property-placeholder
        location="classpath:config.properties"
        ignore-unresolvable="true" />
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器  -->
	<context:component-scan base-package="com.console.controller" >
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />    
    </context:component-scan>
  <!--   <mvc:resources location="/resources/" mapping="/resources/**"/>  -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/face/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	<!-- 对静态资源文件的访问 不支持访问WEB-INF目录 -->  
    <!-- <mvc:default-servlet-handler /> --> 
    
    <!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->  
	<mvc:resources location="/WEB-INF/vender/js/" mapping="/vender/js/**" />
	<mvc:resources location="/WEB-INF/vender/css/" mapping="/vender/css/**" />
	<mvc:resources location="/WEB-INF/vender/fonts/" mapping="/vender/fonts/**" />
	<mvc:resources location="/WEB-INF/vender/img/" mapping="/vender/img/**" />
	<mvc:resources location="/WEB-INF/vender/ui/" mapping="/vender/ui/**" />
	<mvc:resources location="/WEB-INF/vender/" mapping="/vender/**" />

	 	<!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		默认编码
		<property name="defaultEncoding" value="utf-8" />
		文件大小最大值
		<property name="maxUploadSize" value="10485760000" />
		内存中的最大值
		<property name="maxInMemorySize" value="40960" />
	</bean> -->
	<mvc:interceptors>
		<!-- 登陆拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/*.do" />
			<mvc:mapping path="/*/*.do" />
			<mvc:exclude-mapping path="/vender/**" />
			<mvc:exclude-mapping path="/login.jsp" />
			<mvc:exclude-mapping path="/*.exe" />
			<bean id="loginInterceptor" class="com.console.interceptor.LoginInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:view-controller path="/404" view-name="login/404" />
	<mvc:view-controller path="/500" view-name="login/500" />
</beans>  